// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  password      String    // Hashed password
  role          String    @default("customer") // 'admin' eller 'customer'
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLogin     DateTime?
  isActive      Boolean   @default(true)
  blogPosts     BlogPost[]
  courses       Course[]
  achievements  Achievement[]
  healthMetrics HealthMetric[]
}

model Course {
  id          String   @id @default(uuid())
  title       String
  description String
  level       String   // 'beginner', 'intermediate', 'advanced'
  duration    String
  progress    Int      @default(0)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Achievement {
  id          String   @id @default(uuid())
  title       String
  description String
  icon        String
  earned      Boolean  @default(false)
  earnedAt    DateTime?
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
}

model HealthMetric {
  id          String   @id @default(uuid())
  type        String   // 'energy', 'sleep', 'stress', etc.
  value       Float
  date        DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
}

model BlogPost {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  content     String   // Markdown eller HTML
  imageUrl    String
  imageAlt    String
  metaTitle   String
  metaDesc    String
  status      String   // 'draft', 'scheduled', 'published'
  scheduledAt DateTime?
  publishedAt DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
}
